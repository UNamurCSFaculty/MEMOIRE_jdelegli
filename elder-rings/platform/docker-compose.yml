version: "3.8"

networks:
  keycloak_network:
    driver: bridge
  default: {}

services:
  keycloak-db:
    # build: ./keycloak/
    image: postgres:latest
    container_name: keycloak-db
    environment:
      - POSTGRES_DB=keycloak # Name of the database for Keycloak
      - POSTGRES_USER=keycloak # Username for the database
      - POSTGRES_PASSWORD=K3YcL04KAdm%nD4a|a # Password for the database
    volumes:
      - ./keycloak_postgres_data:/var/lib/postgresql/data # Persist data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"] # Check if PostgreSQL is ready
      interval: 5s # Interval between checks
      timeout: 5s # Timeout for each check
      retries: 5 # Number of retries before marking as unhealthy
    networks:
      - keycloak_network

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://keycloak-db/keycloak
      - KC_DB_USERNAME:keycloak
      - KC_DB_PASSWORD=K3YcL04KAdm%nD4a|a
      - KC_BOOTSTRAP_ADMIN_USERNAME=keycloak_master # Admin username
      - KC_BOOTSTRAP_ADMIN_PASSWORD=K3YcL04KAdm%n # Admin password
      - KC_HOSTNAME=keycloak.local
      - KC_HTTP_RELATIVE_PATH=/auth
    command:
      - "start-dev" # This is the command to start Keycloak in development mode
      - "--import-realm" # Import default configuration from the dedicated mounted volume
      - --hostname=https://keycloak.local/auth
      - "--http-relative-path=/auth"
    ports:
      - "8180:8080" # Keycloak web UI port
    depends_on:
      keycloak-db:
        condition: service_healthy # Wait until PostgreSQL is healthy
    volumes:
      - ./keycloak/data:/opt/keycloak/data # Persist Keycloak data
      - ./keycloak/conf:/opt/keycloak/conf # Persist Keycloak conf
      - ./keycloak/realms:/opt/keycloak/realms # Persist Keycloak realms
      - ./keycloak-config/https:/opt/keycloak/data/import # Retrieve configuration backup to import
    networks:
      - keycloak_network

  elderrings-db:
    image: postgres:15
    container_name: elderrings-db
    environment:
      POSTGRES_DB: elderrings
      POSTGRES_USER: elderrings_user
      POSTGRES_PASSWORD: elderrings_p4ssw0rd
    volumes:
      - ./elderrings_postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/certs
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - keycloak_network
      - default
    depends_on:
      - keycloak

volumes:
  postgres_data: # Volume for PostgreSQL data
  keycloak_data: # Volume for Keycloak data
